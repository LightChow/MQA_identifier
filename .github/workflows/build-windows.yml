name: Build MQA Identifier Windows EXE

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: "4.0.3"

      - name: Setup vcpkg and install libflac
        shell: pwsh
        env:
          VCPKG_ROOT: ${{ runner.temp }}\vcpkg
        run: |
          $vcpkgRoot = Join-Path $env:RUNNER_TEMP 'vcpkg'
          Write-Host "Cloning vcpkg to: $vcpkgRoot"
          git clone https://github.com/microsoft/vcpkg.git $vcpkgRoot
          Push-Location $vcpkgRoot
          Write-Host "Bootstrapping vcpkg (batch bootstrap)"
          & .\bootstrap-vcpkg.bat
          if ($LASTEXITCODE -ne 0) {
            Write-Host "bootstrap-vcpkg.bat failed with exit code $LASTEXITCODE"
            exit $LASTEXITCODE
          }
          Write-Host "Installing libflac for x64-windows triplet (this provides FLAC and FLAC++ CMake targets)"
          & .\vcpkg.exe install libflac --triplet x64-windows
          if ($LASTEXITCODE -ne 0) {
            Write-Host "ERROR: vcpkg install libflac failed with exit code $LASTEXITCODE"
            exit $LASTEXITCODE
          }
          Write-Host "vcpkg installed packages at: $vcpkgRoot\installed\x64-windows"
          Pop-Location

      - name: Configure with CMake (using vcpkg toolchain)
        shell: pwsh
        env:
          VCPKG_ROOT: ${{ runner.temp }}\vcpkg
        run: |
          $vcpkgRoot = Join-Path $env:RUNNER_TEMP 'vcpkg'
          $toolchain = Join-Path $vcpkgRoot 'scripts\buildsystems\vcpkg.cmake'
          Write-Host "Using vcpkg toolchain: $toolchain"
          New-Item -ItemType Directory -Path build -Force | Out-Null
          Push-Location build
          cmake .. -A x64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="$toolchain" -DVCPKG_TARGET_TRIPLET="x64-windows" -DCMAKE_PREFIX_PATH="$vcpkgRoot\installed\x64-windows"
          Pop-Location

      - name: Build
        shell: pwsh
        run: |
          Push-Location build
          cmake --build . --config Release -- /m
          Pop-Location

      - name: Collect artifact
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path artifact -Force | Out-Null
          if (Test-Path "build\Release\mqa_identifier.exe") {
            Copy-Item "build\Release\mqa_identifier.exe" "artifact\mqa_identifier.exe"
          } elseif (Test-Path "build\mqa_identifier.exe") {
            Copy-Item "build\mqa_identifier.exe" "artifact\mqa_identifier.exe"
          } else {
            Write-Host "ERROR: executable not found; listing build directory:"
            Get-ChildItem -Recurse build | ForEach-Object { Write-Host $_.FullName }
            exit 1
          }

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mqa-identifier-windows
          path: artifact\mqa_identifier.exe
